/* tslint:disable */
/* eslint-disable */
/**
 * ABC30
 * ABC30
 *
 * The version of the OpenAPI document: 1.0
 * Contact: zsolt.nagy@ingenimind.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WordDTO } from './WordDTO';
import {
    WordDTOFromJSON,
    WordDTOFromJSONTyped,
    WordDTOToJSON,
} from './WordDTO';

/**
 * 
 * @export
 * @interface PageDTO
 */
export interface PageDTO {
    /**
     * The ID
     * @type {string}
     * @memberof PageDTO
     */
    id?: string;
    /**
     * The page number
     * @type {number}
     * @memberof PageDTO
     */
    number?: number;
    /**
     * The written number in source language
     * @type {string}
     * @memberof PageDTO
     */
    numberTextInSourceLanguage?: string;
    /**
     * The written number in target language
     * @type {string}
     * @memberof PageDTO
     */
    numberTextInTargetLanguage?: string;
    /**
     * The words belonging to the page
     * @type {Array<WordDTO>}
     * @memberof PageDTO
     */
    words?: Array<WordDTO>;
}

/**
 * Check if a given object implements the PageDTO interface.
 */
export function instanceOfPageDTO(value: object): boolean {
    return true;
}

export function PageDTOFromJSON(json: any): PageDTO {
    return PageDTOFromJSONTyped(json, false);
}

export function PageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'number': json['number'] == null ? undefined : json['number'],
        'numberTextInSourceLanguage': json['numberTextInSourceLanguage'] == null ? undefined : json['numberTextInSourceLanguage'],
        'numberTextInTargetLanguage': json['numberTextInTargetLanguage'] == null ? undefined : json['numberTextInTargetLanguage'],
        'words': json['words'] == null ? undefined : ((json['words'] as Array<any>).map(WordDTOFromJSON)),
    };
}

export function PageDTOToJSON(value?: PageDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'number': value['number'],
        'numberTextInSourceLanguage': value['numberTextInSourceLanguage'],
        'numberTextInTargetLanguage': value['numberTextInTargetLanguage'],
        'words': value['words'] == null ? undefined : ((value['words'] as Array<any>).map(WordDTOToJSON)),
    };
}

