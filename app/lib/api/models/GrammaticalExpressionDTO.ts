/* tslint:disable */
/* eslint-disable */
/**
 * ABC30
 * ABC30
 *
 * The version of the OpenAPI document: 1.0
 * Contact: zsolt.nagy@ingenimind.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelGrammaticalExpressionType } from './ModelGrammaticalExpressionType';
import {
    ModelGrammaticalExpressionTypeFromJSON,
    ModelGrammaticalExpressionTypeFromJSONTyped,
    ModelGrammaticalExpressionTypeToJSON,
} from './ModelGrammaticalExpressionType';

/**
 * 
 * @export
 * @interface GrammaticalExpressionDTO
 */
export interface GrammaticalExpressionDTO {
    /**
     * The form order
     * @type {string}
     * @memberof GrammaticalExpressionDTO
     */
    description?: string;
    /**
     * The ID
     * @type {string}
     * @memberof GrammaticalExpressionDTO
     */
    id?: string;
    /**
     * The word ID
     * @type {number}
     * @memberof GrammaticalExpressionDTO
     */
    sequence?: number;
    /**
     * The form type
     * @type {ModelGrammaticalExpressionType}
     * @memberof GrammaticalExpressionDTO
     */
    type?: ModelGrammaticalExpressionType;
    /**
     * The word form
     * @type {string}
     * @memberof GrammaticalExpressionDTO
     */
    value?: string;
    /**
     * The word ID
     * @type {string}
     * @memberof GrammaticalExpressionDTO
     */
    wordId?: string;
}

/**
 * Check if a given object implements the GrammaticalExpressionDTO interface.
 */
export function instanceOfGrammaticalExpressionDTO(value: object): boolean {
    return true;
}

export function GrammaticalExpressionDTOFromJSON(json: any): GrammaticalExpressionDTO {
    return GrammaticalExpressionDTOFromJSONTyped(json, false);
}

export function GrammaticalExpressionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GrammaticalExpressionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'id': json['id'] == null ? undefined : json['id'],
        'sequence': json['sequence'] == null ? undefined : json['sequence'],
        'type': json['type'] == null ? undefined : ModelGrammaticalExpressionTypeFromJSON(json['type']),
        'value': json['value'] == null ? undefined : json['value'],
        'wordId': json['wordId'] == null ? undefined : json['wordId'],
    };
}

export function GrammaticalExpressionDTOToJSON(value?: GrammaticalExpressionDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'description': value['description'],
        'id': value['id'],
        'sequence': value['sequence'],
        'type': ModelGrammaticalExpressionTypeToJSON(value['type']),
        'value': value['value'],
        'wordId': value['wordId'],
    };
}

